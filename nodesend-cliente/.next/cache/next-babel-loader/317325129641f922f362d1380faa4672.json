{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime/helpers/esm/asyncToGenerator\";\nvar __jsx = React.createElement;\nimport React, { useReducer } from 'react';\nimport appContext from './appContext';\nimport appReducer from './appReducer';\nimport { MOSTRAR_ALERTA, OCULTAR_ALERTA, SUBIR_ARCHIVO, SUBIR_ARCHIVO_EXITO, SUBIR_ARCHIVO_ERROR, CREAR_ENLACE_EXITO, CREAR_ENLACE_ERROR, LIMPIAR_STATE, AGREGAR_PASSWORD, AGREGAR_DESCARGAS } from '../../types';\nimport clienteAxios from '../../config/axios';\n\nvar AppState = function AppState(_ref) {\n  var children = _ref.children;\n  var initialState = {\n    mensaje_archivo: null,\n    nombre: '',\n    nombre_original: '',\n    cargando: null,\n    descargas: 1,\n    password: '',\n    autor: null,\n    url: ''\n  }; // Crear dispatch y state\n\n  var _useReducer = useReducer(appReducer, initialState),\n      state = _useReducer[0],\n      dispatch = _useReducer[1]; // Muestra una alerta \n\n\n  var mostrarAlerta = function mostrarAlerta(msg) {\n    dispatch({\n      type: MOSTRAR_ALERTA,\n      payload: msg\n    });\n    setTimeout(function () {\n      dispatch({\n        type: OCULTAR_ALERTA\n      });\n    }, 3000);\n  }; // Sube los archivos al servidor\n\n\n  var subirArchivo = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(formData, nombreArchivo) {\n      var resultado;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch({\n                type: SUBIR_ARCHIVO\n              });\n              _context.prev = 1;\n              _context.next = 4;\n              return clienteAxios.post('/api/archivos', formData);\n\n            case 4:\n              resultado = _context.sent;\n              console.log(resultado.data);\n              dispatch({\n                type: SUBIR_ARCHIVO_EXITO,\n                payload: {\n                  nombre: resultado.data.archivo,\n                  nombre_original: nombreArchivo\n                }\n              });\n              _context.next = 12;\n              break;\n\n            case 9:\n              _context.prev = 9;\n              _context.t0 = _context[\"catch\"](1);\n              // console.log(error);\n              dispatch({\n                type: SUBIR_ARCHIVO_ERROR,\n                payload: _context.t0.response.data.msg\n              });\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee, null, [[1, 9]]);\n    }));\n\n    return function subirArchivo(_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(); // crea un enlace una vez que se subió el archivo\n\n\n  var crearEnlace = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data, resultado;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = {\n                nombre: state.nombre,\n                nombre_original: state.nombre_original,\n                descargas: state.descargas,\n                password: state.password,\n                autor: state.autor\n              }; // console.log(data);\n\n              _context2.prev = 1;\n              _context2.next = 4;\n              return clienteAxios.post('/api/enlaces', data);\n\n            case 4:\n              resultado = _context2.sent;\n              dispatch({\n                type: CREAR_ENLACE_EXITO,\n                payload: resultado.data.msg\n              });\n              _context2.next = 11;\n              break;\n\n            case 8:\n              _context2.prev = 8;\n              _context2.t0 = _context2[\"catch\"](1);\n              console.log(_context2.t0);\n\n            case 11:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2, null, [[1, 8]]);\n    }));\n\n    return function crearEnlace() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var limpiarState = function limpiarState() {\n    dispatch({\n      type: LIMPIAR_STATE\n    });\n  }; // Agregue el password\n\n\n  var agregarPassword = function agregarPassword(password) {\n    dispatch({\n      type: AGREGAR_PASSWORD,\n      payload: password\n    });\n  }; // agrega un número de descargas\n\n\n  var agregarDescargas = function agregarDescargas(descargas) {\n    dispatch({\n      type: AGREGAR_DESCARGAS,\n      payload: descargas\n    });\n  };\n\n  return __jsx(appContext.Provider, {\n    value: {\n      mensaje_archivo: state.mensaje_archivo,\n      nombre: state.nombre,\n      nombre_original: state.nombre_original,\n      cargando: state.cargando,\n      descargas: state.descargas,\n      password: state.password,\n      autor: state.autor,\n      url: state.url,\n      mostrarAlerta: mostrarAlerta,\n      subirArchivo: subirArchivo,\n      crearEnlace: crearEnlace,\n      limpiarState: limpiarState,\n      agregarPassword: agregarPassword,\n      agregarDescargas: agregarDescargas\n    }\n  }, children);\n};\n\nexport default AppState;","map":null,"metadata":{},"sourceType":"module"}